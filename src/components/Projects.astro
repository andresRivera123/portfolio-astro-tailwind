---
import HTMLIcon from "../icons/HTML.astro";
import CSSIcon from "../icons/CSS.astro";
import JavascriptIcon from "../icons/Javascript.astro";
import UnityIcon from "../icons/Unity.astro";

const TAGS = {
  HTML: {
    name: "HTML",
    class: "text-[#E54C21]",
    icon: HTMLIcon,
  },
  CSS: {
    name: "CSS",
    class: "text-[#3798D1]",
    icon: CSSIcon,
  },
  JAVASCRIPT: {
    name: "Javascript",
    class: "text-[#E3C42F]",
    icon: JavascriptIcon,
  },
  UNITY: {
    name: "Unity",
    class: "text-[#fff]",
    icon: UnityIcon,
  },
};
const PROJECTS = [
  {
    title: "LinkedIn",
    description:
      "Actualmente replicando la página de inicio de LinkedIn (Segunda web para repliverse). Este proyecto aún está en desarrollo.",
    link: "https://linkedin-inky.vercel.app/",
    github: "https://github.com/andresRivera123/repliverse/tree/main/linkedin",
    image: "https://andresriveravalle.vercel.app/assets/linkedin-5c2a16ac.jpg",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT],
  },
  {
    title: "Deupload",
    description:
      "Tomando como inspiración el diseño original de Deupload creado por el autor Conikal, hice una réplica de la página principal. Primer proyecto de réplica para repliverse (futuro sitio de réplicas de diseño web).",
    link: "https://deupload-nine.vercel.app/",
    github: "https://github.com/andresRivera123/repliverse/tree/main/deupload",
    image:
      "https://andresriveravalle.vercel.app/assets/repliverse-187b8c23.jpg",
    tags: [TAGS.HTML, TAGS.CSS, TAGS.JAVASCRIPT],
  },
  {
    title: "Alibaba, juego de plataformas pixelart",
    description:
      "Segundo puesto en el concurso de desarrollo de videojuegos en Gamerfest 2023 | Espe-L. Desarrollado y diseñado con Unity, y assets libres de la comunidad.",
    link: "https://rivera-del-valle.itch.io/ali-baba",
    github: "https://github.com/andresRivera123/Alibaba-Game",
    image: "https://andresriveravalle.vercel.app/assets/alibaba-37f8e46d.webp",
    tags: [TAGS.UNITY],
  },
];
---

{
  PROJECTS.map(({ title, description, tags, image }) => (
    <article>
      <h3 class="text-2xl font-semibold text-yellow-200 mb-2">{title}</h3>
      <p class="text-lg mb-4 text-pretty">{description}</p>
      <ul class="flex flex-row flex-wrap gap-x-4 mb-4">
        {tags.map((tag) => (
          <li>
            <span class={`${tag.class} flex items-center gap-x-2 rounded-full text-sm px-2 py-1 brightness-125`}>
              <tag.icon class="size-6" /> {tag.name}
            </span>
          </li>
        ))}
      </ul>

      <img
        src={image}
        alt={`Captura de pantalla del proyecto ${title}`}
        class="rounded shadow-2xl shadow-white/15 mb-12"
      />
    </article>
  ))
}
